{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Start NestJS Application",
      "type": "shell",
      "command": "npm",
      "args": ["run", "start:dev"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Build Application",
      "type": "shell",
      "command": "npm",
      "args": ["run", "build"],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Unit Tests",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Run E2E Tests",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:e2e"],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Start PostgreSQL Docker",
      "type": "shell",
      "command": "docker-compose",
      "args": ["-f", "docker/postgresql-docker-compose.yml", "up", "-d"],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Stop PostgreSQL Docker",
      "type": "shell",
      "command": "docker-compose",
      "args": ["-f", "docker/postgresql-docker-compose.yml", "down"],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Prisma Studio",
      "type": "shell",
      "command": "npx",
      "args": ["prisma", "studio"],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Apply Prisma Migrations",
      "type": "shell",
      "command": "npx",
      "args": ["prisma", "migrate", "deploy"],
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    }
  ]
}